// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -------------------------------------------------------------------------------------------------
// Next Auth
// -------------------------------------------------------------------------------------------------

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? // @db.Text
  access_token             String? // @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? // @db.Text
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  refresh_token_expires_in Int?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  isNewUser     Boolean?  @default(true)
  accounts      Account[]
  sessions      Session[]

  // Relations with main models
  userSettings UserSettings[]
  categories   Category[]
  transactions Transaction[]
  monthHistory MonthHistory[]
  yearHistory  YearHistory[]
  Notification Notification[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// -------------------------------------------------------------------------------------------------
// End of Next Auth
// -------------------------------------------------------------------------------------------------

// -------------------------------------------------------------------------------------------------
// Main Models
// -------------------------------------------------------------------------------------------------

model UserSettings {
  id       String @id @default(cuid())
  userId   String
  currency String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Category {
  id        String   @id @default(cuid())
  name      String
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  icon      String
  type      String
  createdAt DateTime @default(now())

  @@unique([userId, name, type])
}

model Transaction {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  amount       Float
  description  String
  date         DateTime
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  type         String   @default("income")
  category     String
  categoryIcon String
}

model MonthHistory {
  userId  String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  day     Int
  month   Int
  year    Int
  income  Float
  expense Float

  @@id([userId, day, month, year])
}

model YearHistory {
  userId  String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  month   Int
  year    Int
  income  Float
  expense Float

  @@id([userId, month, year])
}

model Notification {
  id        String    @id @default(cuid())
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  title     String
  message   String
  createdAt DateTime  @default(now())
  readAt    DateTime?
}

// -------------------------------------------------------------------------------------------------
// End of Main Models
// -------------------------------------------------------------------------------------------------
